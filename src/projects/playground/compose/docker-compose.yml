version: '3'

services:
  webclient:
    image: webclient
    container_name: webclient
    build:
      context: ./Web
      dockerfile: Dockerfile
    networks:
      - default
    ports:
      - 8801:80
    depends_on:
      - webapi
      - rabbit.mq
      - redis.cache
      - worker
    links:
     - "webapi:api"
     - "sql.data:db"
     - "rabbit.mq:queue"
     - "redis.cache:cache"

  webapi:
    image: webapi
    container_name: webapi
    build:
      context: ./WebApi
      dockerfile: Dockerfile
    networks:
      - default
    ports:
      - 8800:80
    depends_on:
      - sql.data
      - rabbit.mq
      - redis.cache
      - worker
    links:
     - "sql.data:db"
     - "rabbit.mq:queue"
     - "redis.cache:cache"

  worker:
      image: worker
      build:
        context: ./Worker
        dockerfile: Dockerfile
      networks:
          - default
      depends_on:
        - sql.data
        - rabbit.mq
        - redis.cache
      links:
        - "sql.data:db"
        - "rabbit.mq:queue"
        - "redis.cache:cache"

  sql.data:
    image: "microsoft/mssql-server-linux"
    container_name: sql.data
    volumes:
      - files:/sql/data
    environment:
      - SA_PASSWORD=Passw0rd
      - ACCEPT_EULA=Y
    ports:
      - "5434:1433"
    networks:
      - default
    

  rabbit.mq:
    image: rabbitmq:3-management
    container_name: rabbit.mq
    volumes:
      - files:/rabbit/data
    environment:
      - RABBITMQ_DEFAULT_USER=rabbituser
      - RABBITMQ_DEFAULT_PASS=Passw0rd
    ports:
      - "5673:5672"
      - "15673:15672"
    networks:
      - default

  redis.cache:
    image: redis:latest
    container_name: redis.cache
    volumes:
      - files:/redis/data
    ports:
      - "6379:6379"
    networks:
      - default



networks:
  default:


volumes:
  files:

