@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using Domain
@inject AppSettings _settings
@{
  Layout = null;
}

<!DOCTYPE html>

<html>
<head>
  <meta name="viewport" content="width=device-width" />
  <title>Home leme</title>
</head>
<body>
  <h1>Home leme</h1>
  <div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendMessage" value="Send" />
    <ul id="discussion"></ul>
  </div>
  <div id="app">
    <button v-on:click="loadUsers">load users</button>
    <div>
      {{ message }}

    </div>
    <a v-bind:title="message">hover</a>
    <div>
      {{topics.length}}
    </div>
    <ul>
      <li v-for="item in topics">
        {{ item }}
      </li>
    </ul>
  </div>
  <environment names="Development">
    <script src="~/dist/main.js" asp-append-version="true"></script>
  </environment>
  <environment names="Staging,Production">
    <script src="~/dist/main.js" asp-append-version="true"></script>
  </environment>

  @*<script src="https://cdn.jsdelivr.net/npm/vue"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue-resource"></script>*@
  <script>

    @*var transport = signalR.TransportType.WebSockets;
    var connection = new signalR.HubConnection("@_settings.EndPoints["web"]" + "/topics", { transport: transport });
    var messageInput = document.getElementById('message');
    var name = prompt('Enter your name:', '');
    var button = document.getElementById("sendMessage");
    connection.on('broadcastMessage', (name, message) => {
        var liElement = document.createElement('li');
        liElement.innerHTML = '<strong>' + name + '</strong>:&nbsp;&nbsp;' + message;
        document.getElementById('discussion').appendChild(liElement);
    });
    button.addEventListener("click", event => {
        connection.invoke('send', name, messageInput.value);
        messageInput.value = '';
        messageInput.focus();
    });
    connection.start();*@
  
        var app = new Vue({
            el: '#app',
            data: {
                message: 'Hello Vue!',
                topics: []
            },
            methods: {
                loadUsers: function () {
                alert('load clicked');
                this.$http.get('@_settings.EndPoints["api"]/v1/topics')
                    .then(function (response) {
                    alert(JSON.stringify(response));
                    this.topics = response.data;
                }, function(error){
                    console.log(error.statusText);
                });
            }


        }
    });
  </script>
</body>
</html>
