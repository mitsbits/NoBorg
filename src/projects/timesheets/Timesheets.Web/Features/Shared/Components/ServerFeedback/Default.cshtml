@using Borg.Infra
@using Borg.Infra.DTO
@model IEnumerable<IServerResponse>

@{


    Func<IServerResponse, string> _containerClass = (msg) =>
    {
        var result = string.Empty;
        switch (msg.Status)
        {

            case ResponseStatus.Info:
                result = "modal modal-info";
                break;
            case ResponseStatus.Warning:
                result = "modal modal-warning";
                break;
            case ResponseStatus.Error:
                result = "modal modal-danger";
                break;
            case ResponseStatus.Success:
                result = "modal modal-success";
                break;

        }
        return result;
    };

    Func<IServerResponse, string> _calloutClass = (msg) =>
    {
        var result = string.Empty;
        switch (msg.Status)
        {

            case ResponseStatus.Info:
                result = "callout callout-info";
                break;
            case ResponseStatus.Warning:
                result = "callout callout-warning";
                break;
            case ResponseStatus.Error:
                result = "callout callout-danger";
                break;
            case ResponseStatus.Success:
                result = "callout callout-success";
                break;

        }
        return result;
    };

    Func<IServerResponse, string> _iconClass = (msg) =>
    {
        var result = string.Empty;
        switch (msg.Status)
        {

            case ResponseStatus.Info:
                result = "fa fa-info";
                break;
            case ResponseStatus.Warning:
                result = "fa fa-warning";
                break;
            case ResponseStatus.Error:
                result = "fa fa-ban";
                break;
            case ResponseStatus.Success:
                result = "fa fa-check";
                break;

        }
        return result;
    };

}

@if (Model.Any())
{
    if (Model.Count() > 1)
    {
        <div class="modal fade" id="feedbackModal" tabindex="-1" role="dialog" aria-labelledby="feedbackModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    </div><div class="modal-body">
                        @foreach (var message in Model)
                        {
                            <div class="@_calloutClass(message)">
                                <h4>@message.Title</h4>
                                <p>
                                    <span><i class="@_iconClass(message)"></i></span>
                                    @message.Message
                                </p>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

    }
    else
    {
        var message = Model.First();
        <div class="modal fade @_containerClass(message)" id="feedbackModal" tabindex="-1" role="dialog" aria-labelledby="feedbackModalLabel">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title"><i class="@_iconClass(message)"></i> &nbsp; <span> @message.Title</span></h4>
                    </div>
                    <div class="modal-body">

                        <p>
                            <span></span>
                            @message.Message
                        </p>
                    </div>
                </div>
            </div>
        </div>

    }

    <script type="text/javascript">

        $('#feedbackModal').modal({
            show: true
        });
    </script>
}