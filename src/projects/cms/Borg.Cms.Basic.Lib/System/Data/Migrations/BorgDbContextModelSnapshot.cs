// <auto-generated />
using Borg.Cms.Basic.Lib.Features.Navigation;
using Borg.Cms.Basic.Lib.System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Borg.Cms.Basic.Lib.System.Data.Migrations
{
    [DbContext(typeof(BorgDbContext))]
    partial class BorgDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Borg.Cms.Basic.Lib.Features.Content.ContentItemRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Author");

                    b.Property<string>("Body");

                    b.Property<DateTimeOffset?>("LastRevisionDate");

                    b.Property<DateTimeOffset>("PublisheDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GetUtcDate()");

                    b.Property<string>("Slug")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(512);

                    b.Property<string>("Subtitle")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(512);

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(512);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("ContentItemRecords","borg");
                });

            modelBuilder.Entity("Borg.Cms.Basic.Lib.Features.Device.DeviceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FriendlyName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(512);

                    b.Property<string>("Layout")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(512);

                    b.Property<string>("RenderScheme")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("UnSet")
                        .HasMaxLength(512);

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("DeviceRecords","borg");
                });

            modelBuilder.Entity("Borg.Cms.Basic.Lib.Features.Device.SectionRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DeviceId");

                    b.Property<string>("FriendlyName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(512);

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(512);

                    b.Property<string>("RenderScheme");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("DeviceId")
                        .HasName("IX_Section_DeviceId");

                    b.HasIndex("Identifier")
                        .HasName("IX_Section_Identifier");

                    b.ToTable("SectionRecords","borg");
                });

            modelBuilder.Entity("Borg.Cms.Basic.Lib.Features.Device.SlotRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsEnabled");

                    b.Property<string>("ModuleDecriptorJson")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("");

                    b.Property<string>("ModuleGender")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(64);

                    b.Property<string>("ModuleTypeName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(1024);

                    b.Property<int>("Ordinal");

                    b.Property<int>("SectionId");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("ModuleGender")
                        .HasName("IX_Slot_ModuleGender");

                    b.HasIndex("ModuleTypeName")
                        .HasName("IX_Slot_ModuleTypeName");

                    b.HasIndex("Ordinal")
                        .HasName("IX_Slot_Ordinal");

                    b.HasIndex("SectionId")
                        .HasName("IX_Slot_SectionId");

                    b.ToTable("SlotRecords","borg");
                });

            modelBuilder.Entity("Borg.Cms.Basic.Lib.Features.Navigation.NavigationItemRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ContentItemRecordId");

                    b.Property<string>("Display")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(512);

                    b.Property<string>("Group")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("BSE")
                        .HasMaxLength(3);

                    b.Property<bool>("IsPublished");

                    b.Property<int>("ItemType");

                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("Path")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("/")
                        .HasMaxLength(512);

                    b.Property<double>("Weight");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("ContentItemRecordId")
                        .IsUnique()
                        .HasFilter("[ContentItemRecordId] IS NOT NULL");

                    b.ToTable("NavigationItemRecords","borg");
                });

            modelBuilder.Entity("Borg.Cms.Basic.Lib.Features.Device.SectionRecord", b =>
                {
                    b.HasOne("Borg.Cms.Basic.Lib.Features.Device.DeviceRecord", "Device")
                        .WithMany("Sections")
                        .HasForeignKey("DeviceId")
                        .HasConstraintName("FK_Device_Section")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Borg.Cms.Basic.Lib.Features.Device.SlotRecord", b =>
                {
                    b.HasOne("Borg.Cms.Basic.Lib.Features.Device.SectionRecord", "Section")
                        .WithMany("Slots")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("FK_Section_Slot")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Borg.Cms.Basic.Lib.Features.Navigation.NavigationItemRecord", b =>
                {
                    b.HasOne("Borg.Cms.Basic.Lib.Features.Content.ContentItemRecord", "ContentItemRecord")
                        .WithOne("NavigationItemRecord")
                        .HasForeignKey("Borg.Cms.Basic.Lib.Features.Navigation.NavigationItemRecord", "ContentItemRecordId")
                        .HasConstraintName("FK_Navigation_Content");
                });
#pragma warning restore 612, 618
        }
    }
}
