// <auto-generated />
using Borg.Cms.Basic.PlugIns.Documents.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Borg.Cms.Basic.PlugIns.Documents.Data.Migrations
{
    [DbContext(typeof(DocumentsDbContext))]
    [Migration("20180203204640_one")]
    partial class one
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Borg.Cms.Basic.PlugIns.Documents.Data.DocumentOwnerState", b =>
                {
                    b.Property<int>("DoecumentId");

                    b.Property<string>("Owner")
                        .HasMaxLength(256)
                        .IsUnicode(false);

                    b.HasKey("DoecumentId", "Owner")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("DocumentOwnerStates","documents");
                });

            modelBuilder.Entity("Borg.Cms.Basic.PlugIns.Documents.Data.DocumentState", b =>
                {
                    b.Property<int>("Id");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("DocumentStates","documents");
                });
#pragma warning restore 612, 618
        }
    }
}
