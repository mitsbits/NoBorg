@using Borg.MVC.PlugIns.Contracts
@model IPluginDescriptor

<div class="container">
    <div class="row">
        <div id="main_header" class="col-md-12">
            <div class="box box-primary box-solid">
                <div class="box-header with-border">
                    <h3 class="box-title">@Model.Title</h3>

                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <table class="table table-condensed">
                        <tbody>
                            @if (Model is IPlugInArea areaPlugin)
                            {
                                <tr>
                                    <td>Area</td>
                                    <td>@areaPlugin.Area</td>
                                </tr>
                                <tr>
                                    <td>Entry point</td>
                                    <td>
                                        <a asp-area="@areaPlugin.Area" asp-controller="@areaPlugin.BackofficeEntryPointAction["asp-controller"]" asp-action="@areaPlugin.BackofficeEntryPointAction["asp-action"]" asp-route-id="@areaPlugin.BackofficeEntryPointAction["asp-route-id"]">
                                            <i class="@areaPlugin.BackofficeEntryPointAction["icon-class"]"></i> <span>@areaPlugin.Title</span>
                                        </a>
                                    </td>
                                </tr>

                            }
                            @if (Model is IPlugInTheme themePlugin)
                            {
                                <tr>
                                    <td>Themes</td>
                                    <td>@(string.Join(", ", themePlugin.Themes))</td>
                                </tr>
                            }
                            @if (Model is ISecurityPlugIn securityPlugin)
                            {
                                <tr>
                                    <td>Roles</td>
                                    <td>@(string.Join(", ", securityPlugin.DefinedRoles))</td>
                                </tr>
                                <tr>
                                    <td>Policies</td>
                                    <td>@(string.Join(", ", securityPlugin.Policies.Keys))</td>
                                </tr>
                            }
                            @if (Model is ITagHelpersPlugIn taghelpersPlugin)
                            {
                                if (taghelpersPlugin.TagHelpers.Any())
                                {
                                    <tr>
                                        <td>Tag Helpers</td>
                                        <td>@(string.Join(", ", taghelpersPlugin.TagHelpers))</td>
                                    </tr>
                                }
                            }
                            @if (Model is IViewComponentslugIn viewComponentslugin)
                            {
                                if (viewComponentslugin.ViewComponents.Any())
                                {
                                    <tr>
                                        <td>View Components</td>
                                        <td>@(string.Join(", ", viewComponentslugin.ViewComponents))</td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div> 