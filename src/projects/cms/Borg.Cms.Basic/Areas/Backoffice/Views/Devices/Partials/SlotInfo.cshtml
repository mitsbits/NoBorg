@using Borg.Cms.Basic.Lib.Features.Device.Commands
@using Borg.Infra.DTO
@model Borg.Cms.Basic.Lib.Features.Device.ViewModels.SectionViewModel
@{
   
    var dict = Model.ObjectJsonDict();
    ViewBag.ModuleOptions = Model.ModuleOptions();
}
<form role="form" asp-controller="Devices" asp-action="SlotEdit" method="post" class="form-horizontal" asp-route-redirectUrl="@Orchestrator.Device.RelativePath()">
    <div class="box-body">

        @Html.Partial("Partials/SlotInfoForm", Model.SlotCommand)

        <div>

            @foreach (var t in dict.Keys)
            {
                var td = dict[t];
                <input type="hidden" id="@t" value="@td.Value" data-gender="@td.Hint" data-type="@td.HumanKey" />
            }
        </div>
        @*<div class="form-group" id="jsoneditor" >
            </div>*@
        <div class="form-group text-danger" asp-validation-summary="All">
        </div>
    </div>
    <div class="box-footer text-right">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>

<script device id="jsoneditorscript" Weight="100">
    $(function () {

        var container = document.getElementById("jsoneditor");
        var initialText = $('#jsonValueBox').val();
        var options = {
            modes: ['text', 'code', 'tree', 'form', 'view'],
            mode: 'code',
            ace: ace,
            search: true,
            onChange: function () {
                var json = editor.getText();
                $('#jsonValueBox').val(json);
            },
            templates: [
                {
                    text: 'Tiding',
                    title: 'Insert a Tiding',
                    className: 'jsoneditor-type-object',
                    field: 'TidingTemplate',
                    value: {
                        Key: "",
                        Value: "",
                        Weight: 0.1,
                        Depth: 0,
                        HumanKey: "",
                        Hint: "",
                        Flag: ""
                    }
                }
            ]
        }
        var editor = new JSONEditor(container, options, initialText);

        // set json
        $("#modulesselect").change(function () {
            var v = $(this).val();
            var $item = $('#' + v);
            var jtext = $item.val();
            var gender = $item.data('gender');
            var type = $item.data('type');

            if (jtext == "undefined") {
                editor.set({});
                $('#moduleGenderInput').val('');
                $('#jsonValueBox').val('');
            } else {
                $('#moduleGenderInput').val(gender);
                $('#moduleTypeInput').val(type);
                editor.setText(jtext);
            }

        });



    })
</script>