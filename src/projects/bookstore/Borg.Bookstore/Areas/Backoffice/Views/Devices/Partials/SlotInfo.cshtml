@using Borg.Cms.Basic.Lib.Features.Device.Commands
@using Borg.Infra.DTO
@model Borg.Cms.Basic.Lib.Features.Device.ViewModels.SectionViewModel
@{

    var dict = Model.ObjectJsonDict();
    ViewBag.ModuleOptions = Model.ModuleOptions();
    ViewBag.AvailableSectionIdentifiers = Model.AvailableSectionIdentifiers;
    var isTransient = Model.SlotCommand.RecordId <= 0;
}
<form role="form" asp-controller="Devices" asp-action="SlotEdit" method="post" asp-route-redirectUrl="@Orchestrator.Device.RelativePath()">
    @if (isTransient)
    {
        <div class="box-header">
            <h3 class="box-title">Define new slot</h3>
        </div>
    }

    <div class="box-body">

        @Html.Partial("Partials/SlotInfoForm", Model.SlotCommand)

        <div class="form-group text-danger" asp-validation-summary="ModelOnly">
        </div>
    </div>
    <div class="box-footer text-right">
        <button type="submit" class="btn btn-primary"><i class="fa fa-check"></i></button>
    </div>
</form>
<div class="hidden">

    @foreach (var t in dict.Keys)
    {
        var td = dict[t];
        <input type="hidden" id="@t" value="@td.Value" data-gender="@td.Hint" data-type="@td.HumanKey" />
    }
    <input type="hidden" value="undefined" id="empty" />
</div>
<script device id="jsoneditorscript" Weight="100">
    $(function () {

        var container = document.getElementById("jsoneditor");
        var initialText = $('#jsonValueBox').val();
        var options = {
            modes: ['text', 'code', 'tree', 'form', 'view'],
            mode: 'text',
            ace: ace,
            search: false,
            sortObjectKeys: true,
            onChange: function () {
                var json = editor.getText();
                $('#jsonValueBox').val(json);

            },
            templates: [
                {
                    text: 'Tiding',
                    title: 'Insert a Tiding',
                    className: 'jsoneditor-type-object',
                    field: 'TidingTemplate',
                    value: {
                        Key: "",
                        Value: "",
                        Weight: 0.1,
                        Depth: 0,
                        HumanKey: "",
                        Hint: "",
                        Flag: ""
                    }
                }
            ]
        }
        var editor = new JSONEditor(container, options, initialText);

        // set json
        $("#modulesselect").change(function () {
            var v = $(this).val();
            var $item = $('#' + v);
            var jtext = $item.val();
            if (jtext === 'undefined') {
                editor.setText('{}');
                $('#moduleGenderInput').val('');
                $('#jsonValueBox').val('');
                editor.setMode('text');
            } else {
                var gender = $item.data('gender');
                var type = $item.data('type');
                $('#moduleGenderInput').val(gender);
                $('#moduleTypeInput').val(type);
                editor.setText(jtext);
                editor.setMode('tree');

                setTimeout(function () {
                    $('#jsonValueBox').val(jtext);
                }, 800);
            }

        });

    })
</script>