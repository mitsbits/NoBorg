@using Borg.Cms.Basic.Lib
@using Borg.Infra
@using Borg.Infra.DTO
@using Microsoft.AspNetCore.Hosting

@{
    Func<IServerResponse, string> _containerClass = (msg) =>
    {
        var result = string.Empty;
        switch (msg.Status)
        {

            case ResponseStatus.Info:
                result = "text-info";
                break;
            case ResponseStatus.Warning:
                result = "text-warning";
                break;
            case ResponseStatus.Error:
            case ResponseStatus.Critical:
                result = "text-danger";
                break;
            case ResponseStatus.Success:
                result = "text-success";
                break;
            default:
                result = "text-pending";
                break;

        }
        return result;
    };

    Func<IServerResponse, string> _iconClass = (msg) =>
    {
        var result = string.Empty;
        switch (msg.Status)
        {

            case ResponseStatus.Info:
                result = "fa fa-info";
                break;
            case ResponseStatus.Warning:
                result = "fa fa-warning";
                break;
            case ResponseStatus.Error:
            case ResponseStatus.Critical:
                result = "fa fa-ban";
                break;
            case ResponseStatus.Success:
                result = "fa fa-check";
                break;
            default:
                result = "fa fa-clock-o";
                break;

        }
        return result;
    };
}

@if (UserSession.Messages.Any())
{
    <div class="modal fade" id="feedbackModal" tabindex="-1" role="dialog" aria-labelledby="feedbackModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">

                <div class="modal-header">
                    <h3 class="modal-title pull-left">
                        <i class="fa fa-envelope"></i>
                    </h3>
                    <div class="modal-tools pull-right">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    </div>
                </div>
                <div class="modal-body">
                    @{
                        var resp = UserSession.Pop();
                        while (resp != null)
                        {
                            <div class="row">
                                <div class="col-xs-1 text-right">
                                    <i class="@_iconClass(resp) @_containerClass(resp)"></i>
                                </div>
                                <div class="col-xs-11">
                                    <b class="@_containerClass(resp)">@resp.Title</b> &nbsp; @resp.Message
                                </div>
                            </div>
                            {
                                resp = UserSession.Pop();
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript" id="server-response-script">

        $('#feedbackModal').modal({
            show: true
        });
    </script>
}