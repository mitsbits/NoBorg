@using Borg.Cms.Basic.Lib.Features.CMS.Commands
@using Borg
@model Borg.Cms.Basic.Lib.Features.CMS.Commands.NavigationItemStateCreateOrUpdateCommand

@{
    var isTransient = Model.RecordId <= 0;
    var formTilte = isTransient ? "New" : Model.Display;
    var typeOptions = Model.NavigaionTypeOptions
        .Select(x => new SelectListItem()
        {
            Text = x.ToString(),
            Value = x.ToString(),
        }).ToArray();

    var parentOptions = Model.ParentOptions.Select(x => new SelectListItem()
    {
        Value = x.Key.Item1.ToString(),
        Text = '-'.Repeat(x.Key.Item2) + x.Value.Value
    }).ToList();
    parentOptions.Insert(0, new SelectListItem() { Value = "0", Text = "..." });
}

<div class="box box-primary box-solid">
    <div class="box-header with-border">
        <h3 class="box-title">@formTilte</h3>
    </div>
    <div class="box-body">
        <div class="row">
            <div class="col-md-9">
                @if (!isTransient)
                {
                    <form asp-controller="Components" asp-action="ComponentDevice" method="post" asp-route-id="" asp-route-redirecturl="@Orchestrator.Device.RelativePath()">
                        <div class="row">
                            <div class="col-md-9"> @await Component.InvokeAsync("ComponentDevice", new { componentId = Model.RecordId })</div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label style="width: 100%;">&nbsp;</label>

                                    <button type="submit" class="btn btn-primary pull-right"><i class="fa fa-check"></i></button>
                                </div>
                            </div>
                        </div>
                    </form>
                }
            </div>
            <div class="col-md-3">
                <div class="pull-right margin">
                    <form asp-controller="Components" asp-action="ToggleState" asp-area="Backoffice" asp-route-redirecturl="@Orchestrator.Device.RelativePath()" method="post">
                        <input type="hidden" name="id" value="@Model.RecordId" />
                        <input type="hidden" name="operation" value="published" />

                        <button comp-published published-state="@Model.IsPublished"></button>
                    </form>
                </div>
                <div class="pull-right margin">
                    <form asp-controller="Components" asp-action="ToggleState" asp-area="Backoffice" asp-route-redirecturl="@Orchestrator.Device.RelativePath()" method="post">
                        <input type="hidden" name="id" value="@Model.RecordId" />
                        <input type="hidden" name="operation" value="deleted" />
                        <button comp-deleted deleted-state="@Model.IsDeleted"></button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="box-body">
    </div>
    <form role="form" asp-controller="Menus" asp-action="Item" method="post" asp-route-id="">
        <div class="box-body">

            <div class="form-group hidden">
                <label asp-for="RecordId"></label>
                <input type="hidden" asp-for="RecordId" />
                <span asp-validation-for="RecordId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Display"></label>
                <input type="text" class="form-control" asp-for="Display" placeholder="@Html.NameFor(x => x.Display)">
                <span asp-validation-for="Display" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Path"></label>
                <input type="text" class="form-control" asp-for="Path" placeholder="@Html.NameFor(x => x.Path)">
                <span asp-validation-for="Path" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div clas="row">
                    <div class="form-group col-md-5 no-padding">
                        <label asp-for="Group"></label>
                        <input type="hidden" asp-for="Group">
                        <input type="text" class="form-control" placeholder="@Model.Group" disabled="disabled">
                        <span asp-validation-for="Group" class="text-danger"></span>
                    </div>
                    <div class="form-group col-md-5 no-padding col-md-offset-2">
                        <label asp-for="Weight"></label>
                        <input type="text" class="form-control" asp-for="Weight" placeholder="@Html.NameFor(x => x.Weight)">
                        <span asp-validation-for="Weight" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="ParentId"></label>
                <select asp-for="ParentId" asp-items="@parentOptions" class=" form-control select2"></select>
                <span asp-validation-for="ParentId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ItemType"></label>
                <div>

                    @{
                        for (int i = 0; i < typeOptions.Length; i++)
                        {
                            var opt = typeOptions[i];
                            <div class="radio-inline">
                                <input asp-for="ItemType" value="@opt.Value" type="radio" />
                                <label asp-for="@opt.Value">@opt.Value</label>
                                <input asp-for="@opt.Value" type="hidden" />
                            </div>
                        }
                    }
                </div>

                @*<select asp-for="ItemType" asp-items="@typeOptions" class=" form-control select2"></select>*@
                <span asp-validation-for="ItemType" class="text-danger"></span>
            </div>
            <div class="form-group hidden">
                <input type="checkbox" asp-for="IsPublished" />
                <label asp-for="IsPublished"></label>
                <span asp-validation-for="IsPublished" class="text-danger"></span>
            </div>
            <div class="form-group" asp-validation-summary="All">
            </div>
        </div>
        <div class="box-footer text-right">
            @if (!isTransient)
            {
                <a asp-controller="Articles" asp-action="Item" asp-route-id="@ViewBag.ContentItemRecordId" asp-route-redirecturl="@Orchestrator.Device.RelativePath()"
                   class="btn btn-success"><i class="fa fa-book"></i></a>
   
            }
            <button submit-form pull-right="false"></button>
        </div>
    </form>
</div>