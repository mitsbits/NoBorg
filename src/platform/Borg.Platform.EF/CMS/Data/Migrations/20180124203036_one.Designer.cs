// <auto-generated />
using Borg.Platform.EF.CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using Microsoft.EntityFrameworkCore.ValueGeneration;
using System;

namespace Borg.Platform.EF.CMS.Data.Migrations
{
    [DbContext(typeof(CmsDbContext))]
    [Migration("20180124203036_one")]
    partial class one
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("Relational:Sequence:cms.ComponentStatesSQC", "'ComponentStatesSQC', 'cms', '1', '1', '', '', 'Int32', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Borg.Platform.EF.CMS.ArticleTagState", b =>
                {
                    b.Property<int>("ArticleId");

                    b.Property<int>("TagId");

                    b.HasKey("ArticleId", "TagId")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.HasIndex("TagId");

                    b.ToTable("ArticleTagStates","cms");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.ComponentState", b =>
                {
                    b.Property<int>("Id")
                        .HasDefaultValueSql("NEXT VALUE FOR cms.ComponentStatesSQC");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPublished");

                    b.HasKey("Id")
                        .HasAnnotation("SqlServer:Clustered", true);

                    b.ToTable("ComponentStates","cms");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ComponentState");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.ArticleState", b =>
                {
                    b.HasBaseType("Borg.Platform.EF.CMS.ComponentState");

                    b.Property<string>("Body");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(1024)
                        .IsUnicode(true);

                    b.Property<string>("Title")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(1024)
                        .IsUnicode(true);

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasName("IX_Article_Title")
                        .HasFilter("[Title] IS NOT NULL");

                    b.ToTable("ArticleState","cms");

                    b.HasDiscriminator().HasValue("ArticleState");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.HtmlSnippetState", b =>
                {
                    b.HasBaseType("Borg.Platform.EF.CMS.ComponentState");

                    b.Property<string>("Code")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.Property<string>("HtmlSnippet")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .IsUnicode(true);

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("IX_HtmlSnippet_Code")
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("HtmlSnippetState","cms");

                    b.HasDiscriminator().HasValue("HtmlSnippetState");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.TagState", b =>
                {
                    b.HasBaseType("Borg.Platform.EF.CMS.ComponentState");

                    b.Property<string>("Tag")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(1024)
                        .IsUnicode(true);

                    b.Property<string>("TagNormalized")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(1024)
                        .IsUnicode(true);

                    b.Property<string>("TagSlug")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("")
                        .HasMaxLength(1024)
                        .IsUnicode(false);

                    b.HasIndex("Tag")
                        .IsUnique()
                        .HasName("IX_Tag_Tag")
                        .HasFilter("[Tag] IS NOT NULL");

                    b.HasIndex("TagNormalized")
                        .IsUnique()
                        .HasName("IX_Tag_TagNormalized")
                        .HasFilter("[TagNormalized] IS NOT NULL");

                    b.ToTable("TagState","cms");

                    b.HasDiscriminator().HasValue("TagState");
                });

            modelBuilder.Entity("Borg.Platform.EF.CMS.ArticleTagState", b =>
                {
                    b.HasOne("Borg.Platform.EF.CMS.ArticleState", "Article")
                        .WithMany("ArticleTags")
                        .HasForeignKey("ArticleId");

                    b.HasOne("Borg.Platform.EF.CMS.TagState", "Tag")
                        .WithMany("ArticleTags")
                        .HasForeignKey("TagId");
                });
#pragma warning restore 612, 618
        }
    }
}
